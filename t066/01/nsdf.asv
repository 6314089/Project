%**********************************************
% Returns NSDF of input signal.
% Pre:
%       signal = Windowed monophobic signal
%**********************************************
function nsdfCor = nsdf(signal, len)
    nsdfCor = [];
    % For safety reason. Not sure if this is necessary
    MIN_WINDOW_LEN = 16;     % Random value
    MAX_WINDOW_LEN = 20000;  % Another random value
    % Use signal length as default window length
    if (~exist('len', 'var'))
        len = length(signal);
    end
    
    % Set the window size
    W = len;
    % Maximum delay is half of the window size
    w = W / 2;
    
    % Check dimension
    if (size(signal, 2) > 1)
        if (size(signal, 1) > 2)
            % Signal isn't monophobic
            return;
        end
        % Column vector to row vector
        signal = signal';
    end
    
    % Expand signal and get ACF
    paddingLength = 2 ^ nextpow2(2 * (W + w) - 1) - W;
    ffted = fft([signal; zeros(paddingLength, 1)]);
    acf = ffted .* con
    
    return;
end